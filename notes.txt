DynamoDB Table Name : books
Primary Key : id
Use default settings. 

Create role for Lambda to access DynamoDB
Create a lambda function called create-book (NodeJs)

const AWS = require("aws-sdk");
const crypto = require("crypto");

// Generate unique id with no external dependencies
const generateUUID = () => crypto.randomBytes(16).toString("hex");

// Initialising the DynamoDB SDK
const documentClient = new AWS.DynamoDB.DocumentClient();

exports.handler = async event => {
  const { title } = JSON.parse(event.body);
  const params = {
    TableName: "books", // The name of your DynamoDB table
    Item: { // Creating an Item with a unique id and with the passed title
      id: generateUUID(),
      title: title
    }
  };
  try {
    // Utilising the put method to insert an item into the table (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GettingStarted.NodeJs.03.html#GettingStarted.NodeJs.03.01)
    const data = await documentClient.put(params).promise();
    const response = {
      statusCode: 200
    };
    return response; // Returning a 200 if the item has been inserted 
  } catch (e) {
    return {
      statusCode: 500,
      body: JSON.stringify(e)
    };
  }
};

Configure test events : 
{
  "body": "{\"title\": \"Harry Potter\"}"
}

Create another function called get-books

const AWS = require("aws-sdk");
const documentClient = new AWS.DynamoDB.DocumentClient();

exports.handler = async event => {
  const params = {
    TableName: "books" // The name of your DynamoDB table
  };
  try {
    // Utilising the scan method to get all items in the table
    const data = await documentClient.scan(params).promise();
    const response = {
      statusCode: 200,
      body: JSON.stringify(data.Items)
    };
    return response;
  } catch (e) {
    return {
      statusCode: 500
    };
  }
};

Create the Books API Gateway as a regional API 
Create a resource mapping called - books
Create two methods GET and POST (Proxy Integration cause we are passing parameters as request details)
Map the two lambda functions accordingly and deploy the API

Do a POST request from PostMan or any HTTP client - 

{"title":"Lord of the Rings"}
